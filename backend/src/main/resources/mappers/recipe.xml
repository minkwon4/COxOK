<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="recipe">
	
	<select id="select" resultType="RecipeResponseDto">
		select 
			r.recipe_name as recipeName , r.recipe_thumbnail_src as recipeThumbnailSrc, r.recipe_detail as recipeDetail
			, u.nickname as nickname, r.reg_time as regTime, r.cook_time as cookTime
			, r.level, r.calorie, r.carbon, r.protein, r.fat, r.sugar, r.natrium, r.avg_rating as avgRating
			, r.user_id as userId
		from 
			recipe as r, user as u
		where 
			r.user_id = u.user_id 
				and 
			r.recipe_id=#{recipeId} 
	</select>
	
	<select id="selectAll" resultType="RecipeDto">
		select
			r.recipe_name as recipeName, r.recipe_thumbnail_src as recipeThumbnailSrc, r.avg_rating as avgRating,
			r.reg_time as regTime, r.recipe_id as recipeId, cook_time as cookTime, level
		from
			recipe as r
		order by recipe_id desc
		LIMIT #{startIndex}, 6
	</select>
	
	<select id="getRecipeId" resultType="Long">
		select 
			MAX(recipe_id)
		from
			recipe
	</select>
	
	<insert id="write">
		insert into 
			recipe(recipe_name, recipe_thumbnail_src, recipe_detail, cook_time, level, calorie, carbon, protein, fat, sugar, natrium, user_id)
		values
			(#{recipeName}, #{recipeThumbnailSrc}, #{recipeDetail}, #{cookTime}, #{level}, #{calorie}, #{carbon}, #{protein}, #{fat}, #{sugar}, #{natrium}, #{userId})
	</insert>
	
	<update id="updateRecipe">
		update	
			recipe
		set
			recipe_name = #{recipeName}, recipe_thumbnail_src = #{recipeThumbnailSrc}, recipe_detail = #{recipeDetail},
			cook_time = #{cookTime}, level = #{level}, calorie = #{calorie}, carbon = #{carbon},
			protein = #{protein}, fat = #{fat}, sugar = #{sugar}, natrium = #{natrium}
		where
			recipe_id = #{recipeId}
	</update>
	
	<update id="updateNutrient">
		update	
			recipe
		set
			calorie = #{calorie}, carbon = #{carbon},
			protein = #{protein}, fat = #{fat}, sugar = #{sugar}, natrium = #{natrium}
		where
			recipe_id = #{recipeId}
	</update>
	
	<delete id="delete">
		delete from recipe
		where recipe_id = #{recipeId}
	</delete>
	
	<select id="selectAllFoodCategory" resultType="FoodCategoryDto">
      	select food_category_id as foodCategoryId, food_category_name as foodCategoryName
      	from food_category
   	</select>
   
   	<select id="selectAllIngredient" resultType="IngredientDto">
      	select ingredient_id as ingredientId, base_amount as baseAmount, name, detail, unit, calorie, carbon, fat, protein, natrium, sugar
      	from ingredient 
   	</select>
   	
   	<select id="selectAllIngredientAdmin" resultType="IngredientDto">
      	select ingredient_id as ingredientId, base_amount as baseAmount, name, detail, unit, calorie, carbon, fat, protein, natrium, sugar
      	from ingredient
      	LIMIT #{startIndex}, 20
   	</select>
   	
   	<delete id="deleteRecipeIngredient">
   		delete from
   			recipe_ingredient
   		where
   			recipe_id = #{recipeId}
   	</delete>
   
   	<select id="selectRecipeIngredient" resultType="RecipeIngredientResponseDto">
      	select name, amount, unit, i.ingredient_id as ingredientId
      	from ingredient i join recipe_ingredient ri 
      	on i.ingredient_id = ri.ingredient_id 
      	where ri.recipe_id = #{recipeId}
   	</select>
   	
   	<select id="selectIngredientById" resultType="IngredientDto">
      	select ingredient_id as ingredientId, calorie, carbon, protein, fat, sugar, natrium, unit, base_amount as baseAmount, name, detail
      	from ingredient
      	where ingredient_id = #{ingredientId}
   	</select>
   	
   	<insert id="insertRecipeIngredient">
   		insert into recipe_ingredient(recipe_id, ingredient_id, amount)
   		VALUES (#{recipeId}, #{ingredientId}, #{amount})
   	</insert>
   	
   	<insert id="insertRecipeCategory">
   		insert into recipe_food_category(recipe_id, food_category_id)
   		values (#{recipeId}, #{foodCategoryId}) 
   	</insert>
   	
   	<select id = "selectTotalRecipeNum" resultType="Long">
   		select count(*) from recipe
   	</select>
   	
   	<select id= "search" resultType="RecipeDto">
   		select * from (
			select
				distinct(r.recipe_id) as recipeId, 
				r.recipe_name as recipeName, 
				r.recipe_thumbnail_src as recipeThumbnailSrc, 
				r.avg_rating as avgRating,
				r.reg_time as regTime, 
				r.cook_time as cookTime, 
				r.level
			from
				recipe as r , recipe_ingredient as ri , recipe_food_category as rfc
   			where
   				r.recipe_id = ri.recipe_id and r.recipe_id = rfc.recipe_id
	   		<if test="categoryId!=null">
	   			and ( 
	   				0=1
		   		<foreach collection="categoryId" item="category">
					or 
					rfc.food_category_id = #{category.value}
		   		</foreach>
		   		)
	   		</if>	
	   		<if test="ingredientId != null">
	   			<foreach collection="ingredientId" item="ingredient">
	   				intersect
	   				select 
						distinct(r.recipe_id) as recipeId, 
				        r.recipe_name as recipeName, 
				        r.recipe_thumbnail_src as recipeThumbnailSrc, 
				        r.avg_rating as avgRating,
				        r.reg_time as regTime, 
				        r.cook_time as cookTime, 
				        r.level 
					from 
						recipe as r , recipe_ingredient AS ri , recipe_food_category AS rfc 
					where 
						r.recipe_id = ri.recipe_id and r.recipe_id = rfc.recipe_id
		   				and ri.ingredient_id = #{ingredient.value}
		   			
	   			</foreach>
	   		</if>
   		) selected 
   		<![CDATA[
   			where cookTime <= #{cookTime} and level <= #{level}
   		 ]]>
   		order by recipeId desc
   		limit #{startIndex}, 6
   	</select>
   	
   	<select id = "searchTotal" resultType="Long">
   		select count(*) from (
			select
				distinct(r.recipe_id) as recipeId, 
				r.recipe_name as recipeName, 
				r.recipe_thumbnail_src as recipeThumbnailSrc, 
				r.avg_rating as avgRating,
				r.reg_time as regTime, 
				r.cook_time as cookTime, 
				r.level
			from
				recipe as r , recipe_ingredient as ri , recipe_food_category as rfc
   			where
   				r.recipe_id = ri.recipe_id and r.recipe_id = rfc.recipe_id
	   		<if test="categoryId!=null">
	   			and ( 
	   				0=1
		   		<foreach collection="categoryId" item="category">
					or 
					rfc.food_category_id = #{category.value}
		   		</foreach>
		   		)
	   		</if>	
	   		<if test="ingredientId != null">
	   			<foreach collection="ingredientId" item="ingredient">
	   				intersect
	   				select 
						distinct(r.recipe_id) as recipeId, 
				        r.recipe_name as recipeName, 
				        r.recipe_thumbnail_src as recipeThumbnailSrc, 
				        r.avg_rating as avgRating,
				        r.reg_time as regTime, 
				        r.cook_time as cookTime, 
				        r.level 
					from 
						recipe as r , recipe_ingredient AS ri , recipe_food_category AS rfc 
					where 
						r.recipe_id = ri.recipe_id and r.recipe_id = rfc.recipe_id
		   				and ri.ingredient_id = #{ingredient.value}
		   			
	   			</foreach>
	   		</if>
   		) selected
   		<![CDATA[
   			where cookTime <= #{cookTime} and level <= #{level}
   		 ]]>
   	</select>
   	
   	<select id="selectRecipeListByUserId" resultType="RecipeDto">
		SELECT 
			recipe_id, recipe_name as recipeName, recipe_thumbnail_src as recipeThumbnailSrc, avg_rating as avgRating,
			reg_time as regTime, recipe_id as recipeId, cook_time as cookTime, level, recipe_detail as recipeDetail
		FROM 
			recipe
		WHERE
			user_id = #{userId}
	</select>
	
	
	
	<select id="selectRecipeListByCategoryId" resultType="RecipeDto">
		SELECT recipe_id as recipeId, recipe_thumbnail_src as recipeThumbnailSrc, cook_time as cookTime,
			level, recipe_name as recipeName, avg_rating as avgRating
		FROM recipe_food_category JOIN recipe USING(recipe_id)
		WHERE food_category_id = #{foodCategoryId}
		order by recipe_id desc
		limit 18;
	</select>
	
	<insert id="registerIngredientAdmin">
		insert into ingredient(name, detail, base_amount, unit, calorie, carbon, fat, protein, natrium, sugar)
		values(#{name}, #{detail}, #{baseAmount}, #{unit}, #{calorie}, #{carbon}, #{fat}, #{protein}, #{natrium}, #{sugar})
	</insert>
	
	<insert id="registerIngredientUser">
		insert into ingredient(name, unit, calorie, carbon, fat, protein, natrium, sugar)
		values(#{name}, #{unit}, -1, -1, -1, -1, -1, -1)
	</insert>
	
	<update id="modifyIngredientAdmin">
		update
			ingredient
		 set
		 	name = #{name}, detail = #{detail}, base_amount = #{baseAmount}, unit = #{unit}, calorie = #{calorie},
		 	carbon = #{carbon}, fat = #{fat}, protein = #{protein}, natrium = #{natrium}, sugar = #{sugar}
		 where
		 	ingredient_id = #{ingredientId}
	</update>
	
	<select id="allIngredientToBeUpdated" resultType="IngredientDto">
		select 
			ingredient_id as ingredientId, name, detail, base_amount as baseAmount, unit, calorie, carbon, fat, protein, natrium, sugar
		from
			ingredient
		where
			calorie = -1 or carbon = -1 or fat = -1 or protein = -1 or natrium = -1 or sugar = -1
		limit #{startIndex}, 20
	</select>
	
	<delete id="removeIngredientAdmin">
		delete from ingredient
		where ingredient_id = #{ingredientId}
	</delete>
	
	<select id="selectRecipeIdByIngredientId" resultType="Long">
		select distinct(recipe_id) as recipeId
		FROM recipe JOIN recipe_ingredient USING(recipe_id)
		WHERE ingredient_id = #{ingredientId}
	</select>
	
	<select id="selectRecipeListByCookTime" resultType="RecipeDto">
		<![CDATA[
		SELECT 
			recipe_id, recipe_name as recipeName, recipe_thumbnail_src as recipeThumbnailSrc, avg_rating as avgRating,
			reg_time as regTime, recipe_id as recipeId, cook_time as cookTime, level, recipe_detail as recipeDetail
		FROM 
			recipe
		WHERE
			cook_time <= #{cookTime}
		limit {startIndex}, 6
		]]>
	</select>
	
	<select id="selectRecipeTotalByCookTime" resultType="Long">
		<![CDATA[
		SELECT 
			count(recipe_id)
		FROM 
			recipe
		WHERE
			cook_time <= #{cookTime}
		]]>
	</select>
	
	<select id="selectRecipeListByLevel" resultType="RecipeDto">
		<![CDATA[ 
		SELECT 
			recipe_id, recipe_name as recipeName, recipe_thumbnail_src as recipeThumbnailSrc, avg_rating as avgRating,
			reg_time as regTime, recipe_id as recipeId, cook_time as cookTime, level, recipe_detail as recipeDetail
		FROM 
			recipe
		WHERE
			level <= #{level}
		limit {startIndex}, 6	
		]]>
	</select>
   	
	<select id="selectRecipeTotalByLevel" resultType="Long">
		<![CDATA[
		SELECT 
			count(recipe_id)
		FROM 
			recipe
		WHERE
			level <= #{level}
		]]>
	</select>
</mapper>

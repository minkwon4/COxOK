<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="blog">

	<delete id="delete">
		delete from blog where blog_id = #{blogId}
	</delete>
	
	<select id ="selectTotalNum" resultType="Long">
		select count(blog_id) from blog
	</select>
	
	<select id="selectAll" resultType = "BlogDto">
		select 
			blog_id as blogId, user_id as userId, recipe_id as recipeId, title, content,
			reg_time as regTime, tag1, tag2, tag3
		from 
			blog 
		order by 
			blog_id desc
		limit 
			#{startIndex},10
	</select>
 
	<select id="select" resultType="BlogDto">
		select 
			blog_id as blogId, user_id as userId, recipe_id as recipeId, title, content,
			reg_time as regTime, tag1, tag2, tag3
		from 
			blog 		
		where 
			blog_id = #{blogId}
		order by blogId desc
	</select>
	
	<select id="selectMyBlog" resultType="BlogDto">
		select 
			blog_id as blogId, user_id as userId, recipe_id as recipeId, title, content,
			reg_time as regTime, tag1, tag2, tag3
		from 
			blog 		
		where 
			user_id = #{userId}
		order by blogId desc
		limit #{startIndex},10
	</select>
	
	<select id="selectMyTotal" resultType="Long">
		select 
			count(blog_id)
		from 
			blog 		
		where 
			user_id = #{userId}
	</select>
	
	<select id="selectByTitle" resultType="BlogDto">
		select
			blog_id as blogId, user_id as userId, recipe_id as recipeId, title, content,
			reg_time as regTime, tag1, tag2, tag3
		from 
			blog
		where 
			title like concat('%',#{title},'%')
		order by blogId desc	
	</select>

	<select id="selectByTag" resultType="BlogDto">
		select
			distinct(blog_id) as blogId, user_id as userId, recipe_id as recipeId, title, content,
			reg_time as regTime, tag1, tag2, tag3
		from 
			blog
		where 
			tag1 like concat('%',#{tag},'%') or
			tag2 like concat('%',#{tag},'%') or
			tag3 like concat('%',#{tag},'%')
		order by blogId desc	
	</select>
	
	<insert id ="insert">
		insert into blog (user_id, recipe_id, title, content, tag1, tag2, tag3)
		values (
			#{userId}, 
		<if test="recipeId==null">
			null
		</if>
		<if test="recipeId!=null">
			#{recipeId}
		</if>
		, #{title}, #{content}, #{tag1}, #{tag2}, #{tag3})
	</insert>

	<update id="update">
		update blog set
			<if test="recipeId!=null">
				recipe_id = #{recipeId},
			</if>
			<if test="recipeId==null">
				recipe_id=null,
			</if>
			title=#{title},
			content = #{content}, tag1=#{tag1}, tag2=#{tag2}, tag3=#{tag3}
		where blog_id = #{blogId}
	</update>
	
	 
</mapper>
